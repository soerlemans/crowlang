 * Create bindings automatically for the cpp_backend.
   * For languages:
     x Create bindings for Python (done for C++ backend).
     * Create bindings for Lua.
     * Create bindings for Javascript.
     * Create bindings for C.
 * Multiple project.toml's might would have to be supported one day.
 * Move crow/container to lib/container.
   * The  container are general enough so they should be in lib/container, its just more clean/logical.
 * Create a subcommand for the compiler that allows you to only compile a single source.
 * As there might be multiple project.toml, we need to find a way to deal with multiple at the same time.
   * Maybe create a ProjectConfigurationStore where each source has a reference/pointer to the project configuration.
   * Then we can ship the pointer with the ast tokenstream and whatever.
   * This would require some kind of pipeline structure with pluggable elements
     * As not all of the data structures are relevant for the entire compilation pipeline.
 * Create an AST heuristics visitor, which counts the occurences of nodes and their memory footprint.
   * Use tabulate for the result printing.
 * Run source compilation in parallel.
 * Move logging to lib, currently it is a part of crow itself, but we need generic logging for some lib functionalities as well (maybe later).
 * If a std::variant is not initialized it will return its first item deconstructed.
   - We get some StructPtr nil errors, which means some of these std::variants, are not constructed.
   - We should add mono state with an exception trace logs, to get to the bottom of this.
